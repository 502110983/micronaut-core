plugins {
    id 'scala'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor project(":inject-java")
    testAnnotationProcessor project(":inject-java")

    scalaCompilerPlugins project(':inject-scala-plugin')

    implementation project(":core")
    implementation project(":inject")
    implementation project(":inject-java")
    implementation project(":inject-groovy")
    implementation project(":runtime")

    implementation 'org.scala-lang:scala-library:2.13.3'

    testImplementation 'org.scala-lang:scala-compiler:2.13.3'
    testImplementation 'org.scala-lang:scala-reflect:2.13.3'
    //testImplementation "junit:junit:4.13"
    testImplementation project(':inject-scala-plugin')

    testImplementation dependencyModuleVersion("micronaut.test", "micronaut-test-junit5"), {
        exclude module:'micronaut-runtime'
        exclude module:'micronaut-inject'
    }

    testCompile ('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
}

if (hasProperty("debugJava")) {
    compileJava.options.fork = true
    compileJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
}
if (hasProperty("debugJavaTest")) {
    compileTestJava.options.fork = true
    compileTestJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
}

if (hasProperty("debugGroovy")) {
    compileGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006']
}

if (hasProperty("debugScala")) {
    compileScala.scalaCompileOptions.forkOptions.jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5007']
}
if (hasProperty("debugScalaTest")) {
    compileTestScala.scalaCompileOptions.forkOptions.jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5007']
}



